from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, CallbackQueryHandler, ContextTypes, filters

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def get_main_menu():
    keyboard = [
        [InlineKeyboardButton("üìä –û—Ç—á—ë—Ç", callback_data='report')],
        [InlineKeyboardButton("‚ùì –í–æ–ø—Ä–æ—Å", callback_data='question')],
        [InlineKeyboardButton("üìã –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á", callback_data='tasks')],
    ]
    return InlineKeyboardMarkup(keyboard)

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫. –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", 
        reply_markup=get_main_menu()
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
async def menu_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == 'report':
        await query.edit_message_text("üìà –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á—ë—Ç:\n\nüóì –ù–µ–¥–µ–ª—è: 24 –∏—é–Ω—è ‚Äì 30 –∏—é–Ω—è\n‚úÖ –ó–∞–¥–∞—á –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: 12\n‚ùó –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–æ: 2\nüìå –ù–æ–≤—ã—Ö –∑–∞–¥–∞—á: 5")

    elif query.data == 'question':
        await query.edit_message_text("‚ùì –ù–∞–ø–∏—à–∏ –º–Ω–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å!")

    elif query.data == 'tasks':
        tasks = [
            "‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é",
            "üïê –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –≤—Å—Ç—Ä–µ—á—É",
            "‚ùó –ù–∞–ø–∏—Å–∞—Ç—å –æ—Ç—á—ë—Ç –ø–æ –ø—Ä–æ–µ–∫—Ç—É",
            "üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—É"
        ]
        task_list = "\n".join(tasks)
        await query.edit_message_text(f"üìã –¢–µ–∫—É—â–∏–µ –∑–∞–¥–∞—á–∏:\n\n{task_list}")

# –û—Ç–≤–µ—Ç –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    msg = update.message.text.lower()

    if "–ø—Ä–∏–≤–µ—Ç" in msg:
        await update.message.reply_text("üëã –ü—Ä–∏–≤–µ—Ç! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?")
    elif "–æ—Ç—á—ë—Ç" in msg:
        await update.message.reply_text("üìä –¢–≤–æ–π –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç—á—ë—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∫–Ω–æ–ø–∫–µ '–û—Ç—á—ë—Ç' –≤ –º–µ–Ω—é.")
    else:
        await update.message.reply_text("ü§î –Ø –ø–æ–∫–∞ –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ò—Å–ø–æ–ª—å–∑—É–π –º–µ–Ω—é!")

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = ApplicationBuilder().token("Your_token_bot").build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CallbackQueryHandler(menu_callback))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
app.run_polling()
